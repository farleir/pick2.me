# Fluxo de trabalho para publicar conteúdo estático no GitHub Pages
name: Deploy static content to Pages

on:
  # Executa em pushes para o ramo principal (main)
  push:
    branches: ["main"]

  # Permite que você execute este fluxo de trabalho manualmente a partir do separador Actions
  workflow_dispatch:

# Define as permissões do GITHUB_TOKEN para permitir a publicação no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas uma publicação concorrente, ignorando execuções em fila.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Trabalho único de publicação
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # Configurar o ambiente Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Pode ajustar para a versão do Node.js que usa

      # Alteração Chave: O 'working-directory' foi padronizado para 'pick2me-app'
      - name: Install dependencies
        run: npm install
        working-directory: ./pick2me-app 

      # Compilar a aplicação React, também dentro da pasta de trabalho correta
      - name: Build
        run: npm run build
        working-directory: ./pick2me-app

      # Configurar o GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Carregar o artefacto da pasta de compilação (build) que está dentro da sua pasta 'pick2me-app'
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # O caminho agora aponta para a pasta 'build' dentro da sua pasta 'pick2me-app'
          path: './pick2me-app/build'

      # Publicar no GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
